[{"C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\index.js":"1","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\App.js":"2","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\add-review.js":"3","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\restaurants.js":"4","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\login.js":"5","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\restaurants-list.js":"6","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\services\\restaurant.js":"7","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\http-common.js":"8"},{"size":238,"mtime":1633977623506,"results":"9","hashOfConfig":"10"},{"size":1985,"mtime":1633977582436,"results":"11","hashOfConfig":"10"},{"size":2427,"mtime":1633977708374,"results":"12","hashOfConfig":"10"},{"size":3324,"mtime":1633977735370,"results":"13","hashOfConfig":"10"},{"size":1304,"mtime":1633977716307,"results":"14","hashOfConfig":"10"},{"size":5036,"mtime":1633977726360,"results":"15","hashOfConfig":"10"},{"size":703,"mtime":1633977758606,"results":"16","hashOfConfig":"10"},{"size":270,"mtime":1633978452458,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"13zyc7z",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\index.js",[],["38","39"],"C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\App.js",["40"],"import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AddReview from \"./components/add-review\";\nimport Restaurant from \"./components/restaurants\";\nimport RestaurantsList from \"./components/restaurants-list\";\nimport Login from \"./components/login\";\n\nfunction App() {\n  const [user, setUser] = React.useState(null);\n\n  async function login(user = null) {\n    setUser(user);\n  }\n\n  async function logout() {\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/restaurants\" className=\"navbar-brand\">\n          Restaurant Reviews\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/restaurants\"} className=\"nav-link\">\n              Restaurants\n            </Link>\n          </li>\n          <li className=\"nav-item\" >\n            { user ? (\n              <a onClick={logout} className=\"nav-link\" style={{cursor:'pointer'}}>\n                Logout {user.name}\n              </a>\n            ) : (            \n            <Link to={\"/login\"} className=\"nav-link\">\n              Login\n            </Link>\n            )}\n\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/restaurants\"]} component={RestaurantsList} />\n          <Route \n            path=\"/restaurants/:id/review\"\n            render={(props) => (\n              <AddReview {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/restaurants/:id\"\n            render={(props) => (\n              <Restaurant {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/login\"\n            render={(props) => (\n              <Login {...props} login={login} />\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\add-review.js",[],"C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\restaurants.js",["41"],"import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Restaurant = props => {\r\n  const initialRestaurantState = {\r\n    id: null,\r\n    name: \"\",\r\n    address: {},\r\n    cuisine: \"\",\r\n    reviews: []\r\n  };\r\n  const [restaurant, setRestaurant] = useState(initialRestaurantState);\r\n\r\n  const getRestaurant = id => {\r\n    RestaurantDataService.get(id)\r\n      .then(response => {\r\n        setRestaurant(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRestaurant(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const deleteReview = (reviewId, index) => {\r\n    RestaurantDataService.deleteReview(reviewId, props.user.id)\r\n      .then(response => {\r\n        setRestaurant((prevState) => {\r\n          prevState.reviews.splice(index, 1)\r\n          return({\r\n            ...prevState\r\n          })\r\n        })\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {restaurant ? (\r\n        <div>\r\n          <h5>{restaurant.name}</h5>\r\n          <p>\r\n            <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\r\n            <strong>Address: </strong>{restaurant.address.building} {restaurant.address.street}, {restaurant.address.zipcode}\r\n          </p>\r\n          <Link to={\"/restaurants/\" + props.match.params.id + \"/review\"} className=\"btn btn-primary\">\r\n            Add Review\r\n          </Link>\r\n          <h4> Reviews </h4>\r\n          <div className=\"row\">\r\n            {restaurant.reviews.length > 0 ? (\r\n             restaurant.reviews.map((review, index) => {\r\n               return (\r\n                 <div className=\"col-lg-4 pb-1\" key={index}>\r\n                   <div className=\"card\">\r\n                     <div className=\"card-body\">\r\n                       <p className=\"card-text\">\r\n                         {review.text}<br/>\r\n                         <strong>User: </strong>{review.name}<br/>\r\n                         <strong>Date: </strong>{review.date}\r\n                       </p>\r\n                       {props.user && props.user.id === review.user_id &&\r\n                          <div className=\"row\">\r\n                            <a onClick={() => deleteReview(review._id, index)} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Delete</a>\r\n                            <Link to={{\r\n                              pathname: \"/restaurants/\" + props.match.params.id + \"/review\",\r\n                              state: {\r\n                                currentReview: review\r\n                              }\r\n                            }} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Edit</Link>\r\n                          </div>                   \r\n                       }\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               );\r\n             })\r\n            ) : (\r\n            <div className=\"col-sm-4\">\r\n              <p>No reviews yet.</p>\r\n            </div>\r\n            )}\r\n\r\n          </div>\r\n\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>No restaurant selected.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restaurant;","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\login.js",[],"C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\components\\restaurants-list.js",["42","43"],"import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RestaurantsList = props => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [searchName, setSearchName ] = useState(\"\");\r\n  const [searchZip, setSearchZip ] = useState(\"\");\r\n  const [searchCuisine, setSearchCuisine ] = useState(\"\");\r\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"]);\r\n\r\n  useEffect(() => {\r\n    retrieveRestaurants();\r\n    retrieveCuisines();\r\n  }, []);\r\n\r\n  const onChangeSearchName = e => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  const onChangeSearchZip = e => {\r\n    const searchZip = e.target.value;\r\n    setSearchZip(searchZip);\r\n  };\r\n\r\n  const onChangeSearchCuisine = e => {\r\n    const searchCuisine = e.target.value;\r\n    setSearchCuisine(searchCuisine);\r\n    \r\n  };\r\n\r\n  const retrieveRestaurants = () => {\r\n    RestaurantDataService.getAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n        \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const retrieveCuisines = () => {\r\n    RestaurantDataService.getCuisines()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCuisines([\"All Cuisines\"].concat(response.data));\r\n        \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveRestaurants();\r\n  };\r\n\r\n  const find = (query, by) => {\r\n    RestaurantDataService.find(query, by)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByName = () => {\r\n    find(searchName, \"name\")\r\n  };\r\n\r\n  const findByZip = () => {\r\n    find(searchZip, \"zipcode\")\r\n  };\r\n\r\n  const findByCuisine = () => {\r\n    if (searchCuisine == \"All Cuisines\") {\r\n      refreshList();\r\n    } else {\r\n      find(searchCuisine, \"cuisine\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row pb-1\">\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by name\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByName}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by zip\"\r\n            value={searchZip}\r\n            onChange={onChangeSearchZip}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByZip}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group col-lg-4\">\r\n\r\n          <select onChange={onChangeSearchCuisine}>\r\n             {cuisines.map(cuisine => {\r\n               return (\r\n                 <option value={cuisine}> {cuisine.substr(0, 20)} </option>\r\n               )\r\n             })}\r\n          </select>\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByCuisine}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {restaurants.map((restaurant) => {\r\n          const address = `${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}`;\r\n          return (\r\n            <div className=\"col-lg-4 pb-1\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{restaurant.name}</h5>\r\n                  <p className=\"card-text\">\r\n                    <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\r\n                    <strong>Address: </strong>{address}\r\n                  </p>\r\n                  <div className=\"row\">\r\n                  <Link to={\"/restaurants/\"+restaurant._id} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\r\n                    View Reviews\r\n                  </Link>\r\n                  <a target=\"_blank\" href={\"https://www.google.com/maps/place/\" + address} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">View Map</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantsList;","C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\services\\restaurant.js",[],"C:\\Users\\lucas\\OneDrive\\Documents\\School\\Self-Selected-Project\\frontend\\src\\http-common.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":35,"column":15,"nodeType":"50","endLine":35,"endColumn":83},{"ruleId":"48","severity":1,"message":"49","line":72,"column":29,"nodeType":"50","endLine":72,"endColumn":127},{"ruleId":"51","severity":1,"message":"52","line":81,"column":23,"nodeType":"53","messageId":"54","endLine":81,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":164,"column":19,"nodeType":"50","messageId":"57","endLine":164,"endColumn":139,"fix":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"61","text":"62"},"no-global-assign","no-unsafe-negation",[4829,4829]," rel=\"noreferrer\""]